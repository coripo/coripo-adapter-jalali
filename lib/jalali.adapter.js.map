{"version":3,"sources":["../src/jalali.adapter.js"],"names":["jalaaliJs","require","i18next","locales","Adapter","config","init","lng","locale","fallbackLng","initImmediate","resources","trl","key","store","data","changeLanguage","t","id","name","description","l10n","date","newDate","toJalaali","year","month","day","ldate","jy","jm","jd","i18n","toGregorian","gy","gm","gd","getMonthName","short","shortNameKey","fullNameKey","string","Error","getMonthLength","jalaaliMonthLength","isValid","isValidJalaaliDate","isLeap","isLeapJalaaliYear","offsetYear","offset","offsetMonth","newYear","Math","floor","newOffset","newMonth","newDay","min","offsetDay","i18nDate","jsDate","Date","setDate","getDate","getFullYear","getMonth","exports"],"mappings":"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","file":"jalali.adapter.js","sourcesContent":["const jalaaliJs = require('jalaali-js');\nconst i18next = require('i18next');\nconst locales = require('../locales/index.js');\n\nconst Adapter = function Adapter(config = {}) {\n  i18next.init({\n    lng: config.locale || 'en',\n    fallbackLng: 'en',\n    initImmediate: false,\n    resources: locales,\n  });\n  const trl = (key) => {\n    i18next.store.data = locales;\n    i18next.changeLanguage(config.locale || 'en');\n    return i18next.t(key);\n  };\n  const id = 'coripo.coripo.adapter.jalali';\n  const name = trl('jalali-adapter.name');\n  const description = trl('jalali-adapter.description');\n\n  const l10n = (date) => {\n    const newDate = jalaaliJs.toJalaali(date.year, date.month, date.day);\n    const ldate = {\n      year: newDate.jy,\n      month: newDate.jm,\n      day: newDate.jd,\n    };\n    return ldate;\n  };\n  const i18n = (ldate) => {\n    const newDate = jalaaliJs.toGregorian(ldate.year, ldate.month, ldate.day);\n    const date = {\n      year: newDate.gy,\n      month: newDate.gm,\n      day: newDate.gd,\n    };\n    return date;\n  };\n\n  const getMonthName = (month, short) => {\n    const shortNameKey = `jalali-adapter.months.${month}.short`;\n    const fullNameKey = `jalali-adapter.months.${month}.name`;\n    const string = short ? trl(shortNameKey) : trl(fullNameKey);\n    if (string === shortNameKey || string === fullNameKey) {\n      throw new Error('Invalid month number, number should be between 1 and 12');\n    }\n    return string;\n  };\n\n  const getMonthLength = (year, month) => jalaaliJs.jalaaliMonthLength(year, month);\n\n  const isValid = date => jalaaliJs.isValidJalaaliDate(date.year, date.month, date.day);\n\n  const isLeap = year => jalaaliJs.isLeapJalaaliYear(year);\n\n  const offsetYear = (date, offset) => ({\n    year: date.year + offset,\n    month: date.month,\n    day: date.day,\n  });\n\n  const offsetMonth = (date, offset) => {\n    const newYear = date.year + Math.floor((offset + (date.month - 1)) / 12);\n    const newOffset = offset % 12;\n    const newMonth = ((12 + (date.month - 1) + newOffset) % 12) + 1;\n    const newDay = Math.min(date.day, getMonthLength(newYear, newMonth));\n    return {\n      year: newYear,\n      month: newMonth,\n      day: newDay,\n    };\n  };\n\n  const offsetDay = (date, offset) => {\n    /*\n      im not sure if its 100% accurate\n      should be checked\n    */\n    const i18nDate = i18n({\n      year: date.year,\n      month: date.month,\n      day: date.day,\n    });\n    const jsDate = new Date(`${i18nDate.year}-${i18nDate.month}-${i18nDate.day}`);\n    jsDate.setDate(jsDate.getDate() + offset);\n    return l10n({\n      year: jsDate.getFullYear(),\n      month: jsDate.getMonth() + 1,\n      day: jsDate.getDate(),\n    });\n  };\n\n  return {\n    id,\n    name,\n    description,\n    l10n,\n    i18n,\n    isValid,\n    isLeap,\n    getMonthName,\n    getMonthLength,\n    offsetYear,\n    offsetMonth,\n    offsetDay,\n  };\n};\n\nexports.Adapter = Adapter;\n"]}